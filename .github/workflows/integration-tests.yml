---
name: Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  ASTRO_TELEMETRY_DISABLED: 1

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            tests/package-lock.json

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Install test dependencies
        run: |
          cd tests
          npm ci

      - name: Install Playwright browsers
        run: |
          cd tests
          npx playwright install --with-deps chromium

      - name: Rust code check
        run: cargo check --verbose

      - name: Rust tests (core crates only)
        run: cargo test --verbose --all
        working-directory: backend/crates

      - name: Build frontend for testing
        run: |
          cd frontend
          npm run build
        env:
          ASTRO_TELEMETRY_DISABLED: 1

      - name: Run CI validation
        run: ./validate-ci-setup.sh

      - name: Run frontend-only integration tests
        run: |
          cd frontend
          # Start a simple dev server for testing
          echo "Starting Astro dev server..."
          ASTRO_TELEMETRY_DISABLED=1 npm run dev > ../astro-server.log 2>&1 &
          SERVER_PID=$!
          
          # Wait for server to start with better error handling
          echo "Waiting for Astro dev server to start..."
          for i in {1..15}; do
            if curl -s http://localhost:4321 > /dev/null 2>&1; then
              echo "✅ Server is ready after $i attempts"
              break
            fi
            if [ $i -eq 15 ]; then
              echo "❌ Server failed to start after 15 attempts"
              echo "Server logs:"
              cat ../astro-server.log || echo "No logs found"
              kill $SERVER_PID || true
              exit 1
            fi
            echo "⏳ Attempt $i failed, waiting 2 seconds..."
            sleep 2
          done
          
          # Run basic frontend tests
          cd ../tests
          echo "Testing basic page load..."
          curl -s http://localhost:4321 | head -5 || echo "Failed to fetch page"
          
          echo "Running Playwright tests..."
          npx playwright test tests/homepage.spec.js --project=chromium --timeout=30000 --reporter=line || TEST_RESULT=$?
          
          # Cleanup
          echo "Cleaning up server..."
          kill $SERVER_PID || true
          sleep 2
          
          # Show server logs if tests failed
          if [ "${TEST_RESULT:-0}" -ne 0 ]; then
            echo "Test failed, showing server logs:"
            cat ../astro-server.log || echo "No logs found"
          fi
          
          exit ${TEST_RESULT:-0}
        env:
          BASE_URL: http://localhost:4321
          CI: true
          ASTRO_TELEMETRY_DISABLED: 1

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: |
            tests/test-results/
            tests/playwright-report/
          retention-days: 30

      - name: Cleanup
        if: always()
        run: |
          # Kill any remaining processes
          pkill -f "npm run dev" || true
          pkill -f "astro" || true